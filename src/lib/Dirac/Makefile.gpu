CC=gcc
CXX=g++
NVCC=nvcc
CFLAGS= -Wall -O3 -g -DHAVE_CUDA -DHYBRID_CODE
CLIBS= -lm -lpthread
LAPACK=-L/usr/local/OpenBLAS/lib/ -lopenblas -lgfortran -lpthread

CUDALIB=-lcuda -lcudart
#NVCC=/usr/local/cuda/bin/nvcc
#NVCFLAGS=-arch=sm_35 -g -G --ptxas-options=-v -O3
NVCFLAGS=-gencode arch=compute_35,code=sm_35 -gencode arch=compute_37,code=sm_37 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=compute_61 -gencode arch=compute_62,code=compute_62 --ptxas-options=-v -O3

#### glib
GLIBI=-I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include/
GLIBL=-lglib-2.0 -L/usr/lib64

# NVML
NVML_LIB=-lnvidia-ml

INCLUDES=-I. 
LIBPATH= $(CUDALIB)


OBJECTS=lmfit.o lbfgs.o myblas.o mderiv.o clmfit.o clmfit_nocuda.o barrier.o robust.o robustlm.o oslmfit.o mderiv_fl.o clmfit_fl.o updatenu.o robust_fl.o manifold_fl.o rtr_solve_cuda.o rtr_solve_robust_cuda.o manifold_average.o consensus_poly.o rtr_solve_robust_cuda_admm.o rtr_solve_robust_admm.o admm_solve.o load_balance.o mdl.o 


default:libdirac.a
lmfit.o:lmfit.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
lbfgs.o:lbfgs.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
myblas.o:myblas.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
mderiv.o:mderiv.cu
	$(NVCC) $(NVCFLAGS) $(INCLUDES) $(GLIBI) -c $<
clmfit.o:clmfit.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
clmfit_nocuda.o:clmfit_nocuda.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
barrier.o:barrier.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
robustlm.o:robustlm.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
robust.o:robust.cu
	$(NVCC) $(NVCFLAGS) $(INCLUDES) $(GLIBI) -c $<
robust_fl.o:robust_fl.cu
	$(NVCC) $(NVCFLAGS) $(INCLUDES) $(GLIBI) -c $<
oslmfit.o:oslmfit.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
clmfit_fl.o:clmfit_fl.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
updatenu.o:updatenu.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
mderiv_fl.o:mderiv_fl.cu
	$(NVCC) $(NVCFLAGS) $(INCLUDES) $(GLIBI) -c $<
manifold_fl.o:manifold_fl.cu
	$(NVCC) $(NVCFLAGS) $(INCLUDES) $(GLIBI) -c $<
rtr_solve_cuda.o:rtr_solve_cuda.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
rtr_solve_robust_cuda.o:rtr_solve_robust_cuda.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
manifold_average.o:manifold_average.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
consensus_poly.o:consensus_poly.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
rtr_solve_robust_cuda_admm.o:rtr_solve_robust_cuda_admm.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
rtr_solve_robust_admm.o:rtr_solve_robust_admm.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI) -c $<
admm_solve.o:admm_solve.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
load_balance.o:load_balance.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<
mdl.o:mdl.c
	$(CC) $(CFLAGS) $(INCLUDES) $(GLIBI)  -c $<


RANLIB=ranlib
libdirac.a:$(OBJECTS) Dirac.h
	ar rv $@ $(OBJECTS); \
	$(RANLIB) $@;
